version: 2.1
orbs:
  docker: circleci/docker@0.5.19
  django-tools: pennlabs/django-tools@0.0.1
  helm-tools: pennlabs/helm-tools@0.1.7
  cypress: cypress-io/cypress@1

branch-filters: &branch-filters
  filters:
    branches:
      only:
        - master

jobs:
  lint-frontend:
    docker:
      - image: pennlabs/frontend-test:latest
    steps:
      - checkout
      - cypress/install:
          working_directory: frontend
          cache-key: >-
            cache-{{ arch }}-{{ .Branch }}-{{ checksum "frontend/package.json" }}
      - run:
          name: Install dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Lint and build frontend
          command: |
            cd frontend
            npm run lint
            npm run build
      - run:
          name: Run tests
          requires:
            - cypress/install
          command: |
            cd frontend
            npm run test

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - lint-frontend
      - django-tools/check:
          project-name: pennclubs
          project-location: backend
      - docker/publish:
          name: publish-backend
          requires:
            - django-tools/check
          path: backend
          cache_from: "pennlabs/penn-clubs-backend:latest"
          image: "pennlabs/penn-clubs-backend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - docker/publish:
          name: publish-frontend
          requires:
            - lint-frontend
          path: frontend
          cache_from: "pennlabs/penn-clubs-frontend:latest"
          image: "pennlabs/penn-clubs-frontend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - helm-tools/deploy:
          requires:
            - publish-backend
            - publish-frontend
          context: k8s-deploy
          <<: *branch-filters
